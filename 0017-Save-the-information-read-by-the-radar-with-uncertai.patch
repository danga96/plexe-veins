From 4bf5e78409abbef3606647662f734dedaae17d41 Mon Sep 17 00:00:00 2001
From: giorio94 <33200527+giorio94@users.noreply.github.com>
Date: Thu, 18 Jul 2019 17:00:19 +0200
Subject: [PATCH 17/26] Save the information read by the radar (with
 uncertainties) as vectors

---
 .../platooning/protocols/BaseProtocol.cc         | 16 ++++++++++++++++
 .../platooning/protocols/BaseProtocol.h          |  9 +++++++++
 2 files changed, 25 insertions(+)

diff --git a/src/veins/modules/application/platooning/protocols/BaseProtocol.cc b/src/veins/modules/application/platooning/protocols/BaseProtocol.cc
index 57ff7522..7d87df55 100644
--- a/src/veins/modules/application/platooning/protocols/BaseProtocol.cc
+++ b/src/veins/modules/application/platooning/protocols/BaseProtocol.cc
@@ -88,6 +88,10 @@ void BaseProtocol::initialize(int stage)
         V2XControllerAccelerationOut.setName("V2XControllerAcceleration");
         V2XTimeOut.setName("V2XTime");
 
+        radarTimeOut.setName("RadarTime");
+        radarDistanceOut.setName("RadarDistance");
+        radarRelSpeedOut.setName("RadarRelativeSpeed");
+
         // subscribe to signals for channel busy state and collisions
         findHost()->subscribe(sigChannelBusy, this);
         findHost()->subscribe(sigCollision, this);
@@ -198,6 +202,8 @@ void BaseProtocol::sendPlatooningMessage(int destinationAddress)
 
     auto pkt = generatePlatooningBeacon();
     logPlatooningBeacon(pkt);
+    // Log together with the platooning beacon, to guarantee synchronized time-stamps
+    logRadarReadings();
 
     // put platooning beacon into the message for the UnicastProtocol
     unicast->encapsulate(pkt);
@@ -215,6 +221,16 @@ void BaseProtocol::logPlatooningBeacon(PlatooningBeacon* pb) {
     V2XTimeOut.record(pb->getTime());
 }
 
+void BaseProtocol::logRadarReadings() {
+
+    double radarDistance, radarRelSpeed, samplingTime;
+    traciVehicle->getRadarMeasurements(radarDistance, radarRelSpeed, samplingTime, true /* log the values with uncertainties */);
+
+    radarTimeOut.record(samplingTime);
+    radarDistanceOut.record(radarDistance);
+    radarRelSpeedOut.record(radarRelSpeed);
+}
+
 void BaseProtocol::handleUnicastMsg(UnicastMessage* unicast)
 {
 
diff --git a/src/veins/modules/application/platooning/protocols/BaseProtocol.h b/src/veins/modules/application/platooning/protocols/BaseProtocol.h
index 0611b322..2c1198aa 100644
--- a/src/veins/modules/application/platooning/protocols/BaseProtocol.h
+++ b/src/veins/modules/application/platooning/protocols/BaseProtocol.h
@@ -67,6 +67,9 @@ private:
     cOutVector V2XAccelerationOut, V2XControllerAccelerationOut;
     cOutVector V2XTimeOut;
 
+    // The vectors used to output the values read by the radar (with errors)
+    cOutVector radarTimeOut, radarDistanceOut, radarRelSpeedOut;
+
 protected:
     // determines position and role of each vehicle
     BasePositionHelper* positionHelper;
@@ -162,6 +165,12 @@ protected:
      */
     virtual void logPlatooningBeacon(PlatooningBeacon* pb);
 
+    /**
+     * Logs the values read by the radar (characterized by realistic errors)
+     * It is implemented here to guarantee synchronized time-stamps with the platooning beacon information.
+     */
+    virtual void logRadarReadings();
+
     /**
      * This method must be overridden by subclasses to take decisions
      * about what to do.
-- 
2.20.1

