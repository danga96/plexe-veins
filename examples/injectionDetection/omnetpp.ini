[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

ned-path = .
network = Highway

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

#number of simulation
repeat=4
sim-time-limit = 90 s

**.debug = false
**.coreDebug = false

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "org.car2x.veins.modules.application.platooning.PlatoonCar"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.phy80211p.sensitivity = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895

##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].unicast.rng-0 = 1
*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/freeway.sumo.cfg"

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 8}
**.numberOfCarsPerPlatoon = ${platoonSize = 8}
**.numberOfLanes = ${nLanes = 1}

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"
*.node[*].helper.nLanes = ${nLanes}
*.node[*].helper.platoonSize = ${platoonSize}
*.node[*].helper.nCars = ${nCars}

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].scenario.useControllerAcceleration = true

**.numericController = ${controller = 1}
*.node[*].scenario.controller = "CACC"
*.node[*].scenario.spacing = ${spacing = 10}m
*.node[*].scenario.headway = ${headway = 0}s

# **.numericController = ${controller = 2}
# *.node[*].scenario.controller = "CONSENSUS"
# *.node[*].scenario.spacing = ${spacing = 5}m
# *.node[*].scenario.headway = ${headway = 0.4}s

# **.numericController = ${controller = 3}
# *.node[*].scenario.controller = "FLATBED"
# *.node[*].scenario.spacing = ${spacing = 10}m
# *.node[*].scenario.headway = ${headway = 0}s

# **.numericController = ${controller = 4}
# *.node[*].scenario.controller = "PLOEG"
# *.node[*].scenario.spacing = ${spacing = 2}m
# *.node[*].scenario.headway = ${headway = 0.2}s

*.node[*].scenario.leaderHeadway = ${leaderHeadway = 2}s

#for consensus controller => true
*.node[*].scenario.usePrediction =     false

#if false => w/o radar; if true => w radar;
*.node[*].scenario.useRadarPredSpeed = false

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "InjectionDetectionApp"

*.node[*].appl.fallbackACCHeadway = -1s
# *.node[*].appl.fallbackACCHeadway = 1.5s
*.node[*].appl.fallbackACCSafetyMargin = 0.5
*.node[*].appl.detectionAvgWindow = 10
*.node[*].appl.detectionAttackTolerance = 10
*.node[*].appl.distanceKFThresholdFactor = 0.33
*.node[*].appl.distanceRadarThresholdFactor = 0.25
*.node[*].appl.detectionAccelerationFactor = 0.05
*.node[*].appl.qFactor = 50
                
*.node[*].appl.speedRadarV2XThresholdFactor = 1
*.node[*].appl.distanceV2XKFThresholdFactor = 1

#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "InjectedBeaconing"

#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 4}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}
#set to 0 the packet loss rate for the unicast protocol
*.node[*].unicast.packetLossRate = 0

# Injection parameters
*.node[*].prot.attackStart = uniform(15s, 70s)

*.node[*].prot.enablePositionInjection = false
*.node[*].prot.positionInjectionRate = uniform(1mps, 5mps)
*.node[*].prot.positionInjectionLimit = uniform(25m, 75m)

*.node[*].prot.enableSpeedInjection = false
*.node[*].prot.speedInjectionRate = uniform(0.05mpsps, 0.25mpsps)
*.node[*].prot.speedInjectionLimit = uniform(1mps, 5mps)

*.node[*].prot.enableAccelerationInjection = false
*.node[*].prot.accelerationInjectionRate = uniform(0.025mpspsps, 0.1mpspsps)
*.node[*].prot.accelerationInjectionLimit = uniform(0.25mpsps, 1mpsps)


##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "PlatoonsTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert nCars platooning vehicles
**.traffic.nCars = ${nCars}
#let platoonSize cars per platoon
**.traffic.platoonSize = ${platoonSize}
#use nLanes lanes
**.traffic.nLanes = ${nLanes}
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = ${spacing}m
**.traffic.platoonInsertHeadway = ${headway}s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s

#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

##########################################################
#                    Sensor parameters                   #
##########################################################

## Radar distance parameters
*.node[*].sensors[8].minValue = 0 # m
*.node[*].sensors[8].maxValue = 250 # m

##########################################################
#              Realistic Sensor parameters               #
##########################################################

[Config RealisticSensors]
## Ego GPS parameters
*.node[*].sensors[1..2].decimalDigits = 1
*.node[*].sensors[1..2].absoluteError = 1 # m

## Ego speed sensor parameters
*.node[*].sensors[3..5].decimalDigits = 2
*.node[*].sensors[3..5].absoluteError = 0.1 # m/s

## Ego acceleration sensor parameters
*.node[*].sensors[6].decimalDigits = 3
*.node[*].sensors[6].absoluteError = 0.01 # m/s^2

## Radar distance parameters
*.node[*].sensors[8].minValue = 0 # m
*.node[*].sensors[8].maxValue = 250 # m
*.node[*].sensors[8].decimalDigits = 2
*.node[*].sensors[8].absoluteError = 0.1 # m

## Radar speed parameters
*.node[*].sensors[9].minValue = -75 # m/s
*.node[*].sensors[9].maxValue = 60 # m/s
*.node[*].sensors[9].decimalDigits = 2
*.node[*].sensors[9].absoluteError = 0.1 # m/s

*.node[*].sensors[*].seed = parentIndex()

##########################################################
#              Random Scenario configuration             #
##########################################################

[Config RandomScenario]
extends = RealisticSensors

*.node[*].scenario_type = "RandomScenario"

*.node[*].scenario.avgSpeed = uniform(90kmph, 110kmph)
*.node[*].scenario.maxSpeed = uniform(130kmph, 150kmph)
**.traffic.platoonInsertSpeed = uniform(90kmph, 110kmph)

*.node[*].scenario.startTime = 5s
*.node[*].scenario.accelerationProbability = uniform(0.15, 0.25)
*.node[*].scenario.decelerationProbability = uniform(0.15, 0.25)

*.node[*].scenario.avgAcceleration = 0.50mpsps
*.node[*].scenario.avgDeceleration = 0.75mpsps

*.node[*].scenario.minStepDuration = 0.5s
*.node[*].scenario.meanStepDuration = uniform(1.5s, 3.0s)

##########################################################
#                   Utility configurations               #
##########################################################

[Config BaseConfig]
output-vector-file = ${resultdir}/${configname}_${controller}_${spacing}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${spacing}_${headway}_${repetition}.sca

[Config NoGui]
*.manager.useGui = false

##########################################################
#                 Base Injection Attack                  #
##########################################################

[Config BasePositionInjection]
extends = BaseConfig
*.node[0].prot.enablePositionInjection = true

[Config BaseSpeedInjection]
extends = BaseConfig
*.node[0].prot.enableSpeedInjection = true

[Config BaseAccelerationInjection]
extends = BaseConfig
*.node[0].prot.enableAccelerationInjection = true

[Config BaseCoordinatedInjection]
extends = BaseAccelerationInjection
*.node[0].prot.coordinatedAttack = true

##########################################################
#               Random Injection Attack                #
##########################################################

[Config RandomNoInjection]
extends = RandomScenario, BaseConfig
[Config RandomPositionInjection]
extends = RandomScenario, BasePositionInjection
[Config RandomSpeedInjection]
extends = RandomScenario, BaseSpeedInjection
[Config RandomAccelerationInjection]
extends = RandomScenario, BaseAccelerationInjection
[Config RandomAllInjection]
extends = RandomPositionInjection, RandomSpeedInjection, RandomAccelerationInjection
[Config RandomCoordinatedInjection]
extends = RandomScenario, BaseCoordinatedInjection


[Config RandomNoInjectionNoGui]
extends = RandomNoInjection, NoGui
[Config RandomPositionInjectionNoGui]
extends = RandomPositionInjection, NoGui
[Config RandomSpeedInjectionNoGui]
extends = RandomSpeedInjection, NoGui
[Config RandomAccelerationInjectionNoGui]
extends = RandomAccelerationInjection, NoGui
[Config RandomAllInjectionNoGui]
extends = RandomAllInjection, NoGui
[Config RandomCoordinatedInjectionNoGui]
extends = RandomCoordinatedInjection, NoGui
